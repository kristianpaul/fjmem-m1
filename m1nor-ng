#!/bin/sh
#
# m1nor - Flash a file to M1 NOR partition selected by the file name
#
# Written 2011 by Werner Almesberger
# Copyright 2011 by Werner Almesberger
# Flash layout changed for milkmyist-ng Sebastien Bourdeauducq 2013
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#

classify()
{
	if [ ! -r "$1" ]; then
		echo "$1: cannot read" 1>&2
		exit 1
	fi

	b=${1##*/}
	if [ "${b#soc}" != "$b" ]; then			off=0x00000000;	ext=.fpg
	elif [ "${b#bios}" != "$b" ]; then		off=0x00180000;	ext=.bin
	elif [ "${b#videomixer}" != "$b" ]; then	off=0x001A0000;	ext=.fbi
	else
		echo "$1: unrecognized file name" 1>&2
		exit 1
	fi

	if [ "$ext" -a "${1%$ext}" = "$1" ]; then
		echo "$1: extension mismatch (expected $ext)" 1>&2
		exit 1
	fi
}


if [ -z "$1" ]; then
	echo "usage: $0 filename ..." 1>&2
	exit 1
fi

if [ "$FJMEM_BIT" ]; then
	fjmem=$FJMEM_BIT
else
	fjmem=
	for n in /usr/local/share/milkymist/fjmem.bit \
	    $HOME/.qi/milkymist/*/*/fjmem.bit; do
		if [ -r "$n" ]; then
			fjmem="$n"
			break
		fi
	done
	if [ -z "$fjmem" ]; then
		echo "cannot find fjmem.bit (consider setting FJMEM_BIT)" 1>&2
		exit 1
	fi
fi

for n in "$@"; do
	classify "$n"
done

(
	cat <<EOF
cable milkymist
detect
pld load "$fjmem"
initbus fjmem opcode=000010
frequency 6000000
detectflash 0
endian big
EOF
	for n in "$@"; do
		classify "$n"
		echo flashmem "$off" "$n" noverify
	done
	echo detectflash 0
	echo pld reconfigure
) | jtag -q || exit

#
# Fun fact: a direct flashmem-lockflash-pld reconfigure sequence leaves
# the FPGA in a weird state from which it can't boot out of standby, neither
# via JTAG (pld load ...) or by pressing the middle button.
#
# The only thing that seems to help is to run "detectflash" after the locking.
# (Tried "peek", "usleep", "pld readreg", ... without success.)
#

#
# FIXME: the exit code of "jtag" doesn't indicate whether the session was
# successful.
#

first=true
for n in "$@"; do
	classify "$n"
	echo -n "Flashed $n at offset $off" 1>&2
	if $first; then
		echo " using $fjmem" 1>&2
	else
		echo 1>&2
	fi
	first=false
done
